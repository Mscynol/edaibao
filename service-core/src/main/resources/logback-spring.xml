<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 区分应用名称title,默认值default -->
    <contextName>alexis-edaibao</contextName>
    <!-- 日志的输出目录 -->
    <property name="log.path" value="./logs"/>

    <!--控制台日志格式：彩色日志-->
    <!-- magenta:洋红 -->
    <!-- boldMagenta:粗红-->
    <!-- cyan:青色 -->
    <!-- white:白色 -->
    <!-- magenta:洋红 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%yellow(%date{yyyy-MM-dd HH:mm:ss}) %highlight([%-5level]) %green(%logger) %msg%n"/>

    <!--文件日志格式-->
    <property name="FILE_LOG_PATTERN" value="%date{yyyy-MM-dd HH:mm:ss} [%-5level] %thread %file:%line %logger %msg%n"/>

    <!--编码-->
    <property name="ENCODING" value="UTF-8"/>

    <!-- 控制台日志
        <appender>是<configuration>的子节点，是负责写日志的组件
        <appender>有两个必要属性name和class：name指定appender名称，class指定appender的全限定名
        <encoder>对日志进行格式化
        <pattern>定义日志的具体输出格式
        <charset>编码方式
    -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>${ENCODING}</charset>
        </encoder>
    </appender>
    <!-- 文件日志
        <file>表示日志文件的位置，如果上级目录不存在会自动创建，没有默认值。
        <append>默认 true，日志被追加到文件结尾，如果是 false，服务重启后清空现存文件。
    -->
    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <file>${log.path}/log.log</file>
        <append>true</append>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>${ENCODING}</charset>
        </encoder>
    </appender>
    <appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--  要区别于其他的appender中的文件名字  -->
        <file>${log.path}/log-rolling.log</file>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>${ENCODING}</charset>
        </encoder>
        <!-- 设置滚动日志记录的滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志归档路径以及格式 -->
            <fileNamePattern>${log.path}/info/log-rolling-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--归档日志文件保留的最大数量-->
            <maxHistory>15</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>1KB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    <!-- 日志记录器
        <logger>可以是<configuration>的子节点，用来设置某一个包或具体某一个类的日志打印级别、指定<appender>
        name：用来指定受此logger约束的某一个包或者具体的某一个类
        level：用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF。默认继承上级的级别
        <logger>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个logger
     -->
<!--    <logger name="com.alexis" level="INFO">-->
<!--        <appender-ref ref="CONSOLE" />-->
<!--        <appender-ref ref="FILE" />-->
<!--    </logger>-->
    <!-- 开发环境和测试环境 -->
    <springProfile name="dev,test">
        <logger name="com.alexis" level="INFO">
            <appender-ref ref="CONSOLE" />
        </logger>
    </springProfile>

    <!-- 生产环境 -->
    <springProfile name="prod">
        <logger name="com.alexis" level="ERROR">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="ROLLING_FILE" />
        </logger>
    </springProfile>
</configuration>